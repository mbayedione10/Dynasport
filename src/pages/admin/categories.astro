---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Récupération des catégories
const { data: categories, error: categoriesError } = await supabase
  .from('categories')
  .select('*')
  .order('updated_at', { ascending: false });

if (categoriesError) {
  console.error('Erreur lors de la récupération des catégories:', categoriesError);
}
---

<Layout
  title="Gestion des Catégories"
  description="Interface d'administration pour gérer les catégories de produits"
>
  <Navigation />
  
  <main class="pt-20">
    <div class="container py-12">
      <h1 class="text-3xl font-bold mb-8">Gestion des Catégories</h1>
      
      <div class="bg-white rounded-lg shadow p-6 mb-8">
        <h2 class="text-xl font-bold mb-4">Ajouter une catégorie</h2>
        <form id="category-form" class="space-y-6">
          <div class="grid md:grid-cols-2 gap-6">
            <div>
              <label for="id" class="block text-sm font-medium text-gray-700 mb-2">
                Identifiant (slug)
              </label>
              <input
                type="text"
                id="id"
                name="id"
                required
                class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary/20 focus:border-primary"
                placeholder="ex: equipements"
              />
              <p class="text-xs text-gray-500 mt-1">Utilisé dans l'URL, sans espaces ni caractères spéciaux</p>
            </div>
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
                Nom
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary/20 focus:border-primary"
                placeholder="ex: Équipements"
              />
            </div>
          </div>
          
          <div>
            <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
              Description
            </label>
            <textarea
              id="description"
              name="description"
              required
              rows="3"
              class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary/20 focus:border-primary"
            ></textarea>
          </div>
          
          <div>
            <label for="image_url" class="block text-sm font-medium text-gray-700 mb-2">
              URL de l'image
            </label>
            <input
              type="url"
              id="image_url"
              name="image_url"
              required
              class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary/20 focus:border-primary"
              placeholder="https://example.com/image.jpg"
            />
          </div>
          
          <button type="submit" class="btn-primary">
            Ajouter la catégorie
          </button>
        </form>
      </div>

      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-bold mb-4">Catégories existantes</h2>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nom</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Image</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200" id="categories-table">
              {categories?.map(category => (
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{category.id}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{category.name}</td>
                  <td class="px-6 py-4 text-sm text-gray-500 max-w-xs truncate">{category.description}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    <img src={category.image_url} alt={category.name} class="h-10 w-16 object-cover rounded" />
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    <div class="flex space-x-2">
                      <a href={`/services-produits/${category.id}`} class="text-primary hover:text-primary/80">Voir</a>
                      <a href={`/admin/products?category=${category.id}`} class="text-secondary hover:text-secondary/80">Produits</a>
                      <button 
                        class="text-red-600 hover:text-red-800" 
                        data-id={category.id}
                        onclick="deleteCategory(this.dataset.id)"
                      >
                        Supprimer
                      </button>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </main>

  <Footer />
</Layout>

<script>
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Fonction pour charger les catégories
async function loadCategories() {
  const { data: categories, error } = await supabase
    .from('categories')
    .select('*')
    .order('updated_at', { ascending: false });

  if (error) {
    console.error('Erreur lors du chargement des catégories:', error);
    return;
  }

  const tableBody = document.getElementById('categories-table');
  tableBody.innerHTML = '';

  categories.forEach(category => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${category.id}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${category.name}</td>
      <td class="px-6 py-4 text-sm text-gray-500 max-w-xs truncate">${category.description}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        <img src="${category.image_url}" alt="${category.name}" class="h-10 w-16 object-cover rounded" />
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        <div class="flex space-x-2">
          <a href="/services-produits/${category.id}" class="text-primary hover:text-primary/80">Voir</a>
          <a href="/admin/products?category=${category.id}" class="text-secondary hover:text-secondary/80">Produits</a>
          <button 
            class="text-red-600 hover:text-red-800" 
            data-id="${category.id}"
            onclick="deleteCategory(this.dataset.id)"
          >
            Supprimer
          </button>
        </div>
      </td>
    `;
    tableBody.appendChild(row);
  });
}

// Fonction pour supprimer une catégorie
async function deleteCategory(id) {
  if (!confirm('Êtes-vous sûr de vouloir supprimer cette catégorie ? Cette action supprimera également tous les produits associés.')) {
    return;
  }

  // Supprimer la catégorie
  const { error } = await supabase
    .from('categories')
    .delete()
    .eq('id', id);

  if (error) {
    console.error('Erreur lors de la suppression:', error);
    alert('Une erreur est survenue lors de la suppression de la catégorie');
    return;
  }

  loadCategories();
}

// Gérer le formulaire d'ajout
document.getElementById('category-form').addEventListener('submit', async (e) => {
  e.preventDefault();

  const formData = new FormData(e.target);
  const categoryData = {
    id: formData.get('id'),
    name: formData.get('name'),
    description: formData.get('description'),
    image_url: formData.get('image_url')
  };

  try {
    // Création de la catégorie
    const { error } = await supabase
      .from('categories')
      .insert(categoryData);

    if (error) throw error;

    // Réinitialiser le formulaire et recharger les catégories
    e.target.reset();
    loadCategories();

  } catch (error) {
    console.error('Erreur lors de l\'ajout de la catégorie:', error);
    alert('Une erreur est survenue lors de l\'ajout de la catégorie');
  }
});

// Rendre la fonction deleteCategory globale
window.deleteCategory = deleteCategory;

// Charger les catégories au chargement de la page
document.addEventListener('DOMContentLoaded', loadCategories);
</script>